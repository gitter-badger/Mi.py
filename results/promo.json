{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/ext/commands/cog.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 4873
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "3794601824053551871"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/ext/commands/core.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 6938
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "421196031704983785"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/chat.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 1189,
      "code": {
        "startLine": 1,
        "length": 1189,
        "offset": 0,
        "surroundingCode": "from __future__ import annotations\n\nfrom typing import List, TYPE_CHECKING\n\nfrom .abc.chat import AbstractChatContent\nfrom .types.chat import Chat as ChatPayload\nfrom .user import User\n\n__all__ = ['Chat']\n\nif TYPE_CHECKING:\n    from mi.state import ConnectionState\n\n\nclass Chat(AbstractChatContent):\n    \"\"\"\n    ??????????\n    \"\"\"\n\n    def __init__(self, data: ChatPayload, state: ConnectionState):\n        self.id: str = data[\"id\"]\n        self.created_at: str = data[\"created_at\"]\n        self.content: str = data[\"text\"]\n        self.user_id: str = data[\"user_id\"]\n        self.author: User = User(data[\"user\"], state=state)\n        self.recipient_id: str = data[\"recipient_id\"]\n        self.recipient: str = data[\"recipient\"]\n        self.group_id: str = data[\"group_id\"]\n        self.file_id: str = data[\"file_id\"]\n        self.is_read: bool = data[\"is_read\"]\n        self.reads: List = data[\"reads\"]\n        self._state = state\n\n    async def delete(self) -> bool:\n        \"\"\"\n        ?????????????????????????????\n\n        Returns\n        -------\n        bool:\n            ???????\n        \"\"\"\n        res = await self._state.delete_chat(message_id=self.id)\n        return bool(res)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "8353087150260882457"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/emoji.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 879,
      "code": {
        "startLine": 1,
        "length": 879,
        "offset": 0,
        "surroundingCode": "from __future__ import annotations\nfrom typing import List, TYPE_CHECKING, Optional\nfrom mi.exception import NotExistRequiredData\n\nfrom mi.types.emoji import Emoji as EmojiPayload\n\nif TYPE_CHECKING:\n    from mi import ConnectionState\n\n__all__ = ('Emoji',)\n\n\nclass Emoji:\n    def __init__(self, data: EmojiPayload, state: ConnectionState):\n        self.id: Optional[str] = data.get('id')\n        self.aliases: Optional[List[str]] = data.get('aliases')\n        self.name: Optional[str] = data.get('name')\n        self.category: Optional[str] = data.get('category')\n        self.host: Optional[str] = data.get('host')\n        self.url: Optional[str] = data.get('url')\n        self._state: ConnectionState = state\n\n    async def remove(self) -> bool:\n        if not self.id:\n            raise NotExistRequiredData('id????????')\n        return await self._state.remove_emoji(self.id)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-7884904774456426806"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "examples/use_instance.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 888,
      "code": {
        "startLine": 1,
        "length": 888,
        "offset": 0,
        "surroundingCode": "import asyncio\nfrom mi import Client, Drive, Note, Router\nfrom mi.ext import tasks\n\nuri = \"wss://example.com/streaming\"\ntoken = \"This is your token\"\nbot = Client()\n\n\n@tasks.loop(60)\nasync def task():\n    print(\"?????????\")\n\n\n@bot.listen()\nasync def on_message(note: Note):\n    print(\n        f\"{note.author.instance.name} | {note.author.username}??????????: {note.content}\"\n    )\n\n\n@bot.listen()\nasync def on_reaction(ctx: Note):\n    print(\n        f\"{ctx.author.instance.name} | {ctx.author.name}???????????????: {ctx.reactions}\"\n    )\n\n\n@bot.event()\nasync def on_ready(ws):\n    print(\"work on my machine\")\n    await Router(ws).connect_channel([\"global\", \"main\"])  # global?main????????\n    task.start()  # ??????\n    res = await bot.post_note(\"Hello World\")  # ??????\n    print(res.content)\n    task.stop()  # ???????\n\n\nif __name__ == \"__main__\":\n    asyncio.run(bot.start(uri, token))"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "4395427497265619542"
}]}