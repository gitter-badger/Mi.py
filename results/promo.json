{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/abc/chat.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 242,
      "code": {
        "startLine": 1,
        "length": 242,
        "offset": 0,
        "surroundingCode": "from abc import ABC, abstractmethod\n\n\nclass AbstractChat(ABC):\n    @abstractmethod\n    async def send(self) -> 'AbstractChatContent':\n        pass\n\n\nclass AbstractChatContent(ABC):\n    @abstractmethod\n    async def delete(self):\n        pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-5946059918899145350"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/note.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 12739
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-969644722517523327"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "examples/use_class.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 943,
      "code": {
        "startLine": 1,
        "length": 943,
        "offset": 0,
        "surroundingCode": "import asyncio\nfrom mi import Note\nfrom mi.ext import commands, tasks\nfrom mi.note import Note\nfrom mi.router import Router\n\nuri = \"wss://example.com/streaming\"\ntoken = \"This is your token\"\nprefix = \"tu!\"\n\n\nclass MyBot(commands.Bot):\n    def __init__(self, cmd_prefix: str):\n        super().__init__(cmd_prefix)\n\n    @tasks.loop(60)\n    async def task(self):\n        print(\"?????????\")\n\n    async def on_ready(self, ws):\n        print(\"work on my machine\")\n        await Router(ws).connect_channel([\"global\", \"main\"])  # global?main????????\n        self.task.start()  # ????????\n        res = await self.post_note(\"Hello~~~~~\")  # ??????\n        print(res.content)\n        self.task.stop()  # ???????\n\n    async def on_message(self, note: Note):\n        print(\n            f\"{note.author.instance.name} | {note.author.username}??????????: {note.content}\"\n        )\n\n\nif __name__ == \"__main__\":\n    asyncio.run(MyBot(prefix).start(uri, token))"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-6208493429286562723"
}]}