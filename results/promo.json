{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/abc/ext/core.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 873,
      "code": {
        "startLine": 1,
        "length": 873,
        "offset": 0,
        "surroundingCode": "from abc import ABC, abstractmethod\nfrom typing import Any, Dict\n\n\nclass AbstractGroupMixin(ABC):\n    @property\n    @abstractmethod\n    def command(self):\n        pass\n\n    @abstractmethod\n    def add_command(self, command: \"AbstractCommand\"):\n        pass\n\n    @abstractmethod\n    def remove_command(self, name:str):\n        pass\n\nclass AbstractCommand(ABC):\n    @property\n    @abstractmethod\n    def full_parent_name(self) -> str:\n        pass\n\n    @property\n    @abstractmethod\n    def qualified_name(self) -> str:\n        pass\n\n    @abstractmethod\n    def _ensure_assignment_on_copy(self, other: 'AbstractCommand') -> 'AbstractCommand':\n        pass\n\n    @abstractmethod\n    def copy(self) -> 'AbstractCommand':\n        pass\n\n    @abstractmethod\n    def _update_copy(self, kwargs: Dict[Any, Any]) -> 'AbstractCommand':\n        pass\n\n\nclass AbstractGroup(ABC):\n    pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "6360504399407449567"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/abc/ext/__init__.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 62,
      "code": {
        "startLine": 1,
        "length": 62,
        "offset": 0,
        "surroundingCode": "from .bot import *\nfrom .context import *\nfrom .core import *"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-5994544491515254192"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/ext/commands/bot.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 9000
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "7471016294604953995"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/ext/commands/__init__.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 101,
      "code": {
        "startLine": 1,
        "length": 101,
        "offset": 0,
        "surroundingCode": "from .bot import *\nfrom .cog import *\nfrom .context import *\nfrom .core import *\nfrom .view import *"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "4904741079769067582"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/types/bot.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 396,
      "code": {
        "startLine": 1,
        "length": 396,
        "offset": 0,
        "surroundingCode": "from abc import ABC, abstractmethod\nfrom typing import Any, Dict, Optional\n\n\nclass AbstractBotBase(ABC):\n    @abstractmethod\n    async def dispatch(self, event_name: Optional[str] = None, *args: tuple[Any], **kwargs: Dict[Any, Any]):\n        pass\n\n    @abstractmethod\n    async def event_dispatch(self, event_name: Optional[str] = None, *args: tuple[Any], **kwargs: Dict[Any, Any]):\n        pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "2989453086340100170"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/types/user.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 2686
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "5583776657291293191"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/types/instance.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 1776,
      "code": {
        "startLine": 1,
        "length": 1776,
        "offset": 0,
        "surroundingCode": "from __future__ import annotations\n\nfrom typing import List, Optional, TYPE_CHECKING, TypedDict\n\nif TYPE_CHECKING:\n    from mi.types import Emoji\n\n\nclass Features:\n    registration: bool\n    local_time_line: bool\n    global_time_line: bool\n    email_required_for_signup: bool\n    elasticsearch: bool\n    hcaptcha: bool\n    recaptcha: bool\n    object_storage: bool\n    twitter: bool\n    github: bool\n    github: bool\n    discord: bool\n    service_worker: bool\n    miauth: bool\n\n\nclass OptionalMeta(TypedDict, total=False):\n    pinned_page: List[str]\n    cache_remote_files: bool\n    proxy_remote_files: bool\n    require_setup: bool\n    features: Features\n\n\nclass Meta(OptionalMeta):\n    maintainer_name: str\n    maintainer_email: str\n    version: str\n    name: str\n    uri: str\n    description: str\n    langs: List[str]\n    tos_url: Optional[str]\n    repository_url: str\n    feedback_url: str\n    secure: bool\n    disable_registration: bool\n    disable_local_timeline: bool\n    disable_global_timeline: bool\n    drive_capacity_per_local_user_mb: int\n    drive_capacity_per_remote_user_mb: int\n    email_required_for_signup: bool\n    enable_hcaptcha: bool\n    enable_recaptcha: bool\n    recaptcha_site_key: str\n    sw_publickey: str\n    mascot_image_url: str\n    error_image_url: str\n    max_note_text_length: int\n    emojis: List[Emoji]\n    ads: list\n    enable_email: bool\n    enable_twitter_integration: bool\n    enable_github_integration: bool\n    enable_discord_integration: bool\n    enable_service_worker: bool\n    translator_available: bool\n\n\nclass OptionalInstance(TypedDict, total=False):\n    host: str\n    software_name: str\n    software_version: str\n    icon_url: str\n    favicon_url: str\n    theme_color: str\n\n\nclass Instance(OptionalInstance, Meta):\n    meta: Meta"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-1672172425271421958"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/drive.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 2343
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-4684586532959869861"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/client.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 14261
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-3910563517002081581"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/config.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 492,
      "code": {
        "startLine": 1,
        "length": 492,
        "offset": 0,
        "surroundingCode": "from typing import Any, Optional\n\n\nclass Config:\n    \"\"\"\n    Bot?????????Config\n    \"\"\"\n\n    def __init__(\n            self,\n            token: Optional[str],\n            origin_uri: Optional[str],\n            profile: Any = None,\n            instance: dict = None,\n    ):\n        self.token: str = token\n        self.origin_uri: str = origin_uri\n        self.profile: Any = profile\n        self.instance: dict = instance\n\n\ni: Config = Config(token=None, origin_uri=None)\ndebug: bool = False"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "-4013073490581476328"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An invalid interpreter",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "No Python interpreter configured for the project",
  "detailsInfo": "Reports problems if there is no Python interpreter configured for the project or if the interpreter is invalid. Without a properly\nconfigured interpreter, you cannot execute your Python scripts and benefit from some Python code insight features.\n\nThe IDE provides quick access to the interpreter settings.",
  "sources": [
    {
      "type": "file",
      "path": "mi/__init__.py",
      "language": "Python",
      "line": 1,
      "offset": 0,
      "length": 605,
      "code": {
        "startLine": 1,
        "length": 605,
        "offset": 0,
        "surroundingCode": "__title__ = \"misskey\"\n__author__ = \"yupix\"\n__license__ = \"MIT\"\n__copyright__ = \"Copyright 2021-present yupix\"\n__author_email__ = \"yupi0982@outlook.jp\"\n__url__ = \"https://github.com/yupix/Mi.py\"\n__version__ = \"1.0.3\"\n\n__path__ = __import__(\"pkgutil\").extend_path(__path__, __name__)\n\nfrom .abc import *\nfrom .instance import *\nfrom .emoji import *\nfrom .user import *\nfrom .chart import *\nfrom .drive import *\nfrom .note import *\nfrom .router import *\nfrom .chat import *\nfrom .client import *\nfrom .ext import *\nfrom .gateway import *\nfrom .http import *\nfrom .iterators import *\nfrom .exception import *"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyInterpreterInspection"
  },
  "hash": "7584498518870014212"
}]}